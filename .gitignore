# ===============================================
# AgroAI Co-Pilot Main .gitignore
# This file aggregates ignores for Flutter, Firebase Functions,
# and Python-based ML modules across the monorepo.
# ===============================================

# --- Global Ignores (Applies to the whole repo) ---
.DS_Store             # macOS system files
.vscode/              # VS Code settings (optional, if you want shared settings, ignore .vscode/settings.json, etc. explicitly)
.idea/                # IntelliJ/Android Studio project files
*.log                 # Log files
*.swp                 # Vim swap files
*.swo                 # Vim swap files
*.bak                 # Backup files
*~                    # Emacs backup files
.env                  # Environment variables (e.g., local API keys, Firebase private keys)
.env.*                # Specific environment variable files

# --- Node.js & npm (for backend/ and any JS tooling) ---
node_modules/         # Node.js dependencies at root level
**/node_modules/      # Node.js dependencies in any subdirectory
node_modules
**/node_modules
/node_modules/
backend/node_modules/
backend/node_modules
**/npm-debug.log      # npm debug logs
**/yarn-error.log     # Yarn error logs
**/dist/              # Compiled JavaScript output (common for TypeScript projects)
**/lib/               # Compiled TypeScript output (Firebase Functions typically output here)
.firebase/            # Firebase local emulator data (e.g., emulator-firestore.backup)
.history/             # VS Code Local History extension files
package-lock.json     # Package lock file at root level
**/firebase-debug.log # Firebase debug logs
**/firestore-debug.log # Firestore debug logs

# --- Python (for Module 1, 2, 3, 4) ---
**/__pycache__/       # Python byte-code cache
**/*.pyc              # Python compiled files
**/*.pyd              # Windows specific Python modules
**/*.so               # Shared libraries (often built by C extensions)
.Python               # macOS Python environment
.venv/                # Virtual environment directory (common name)
env/                  # Another common name for virtual environment
venv/                 # Another common name for virtual environment
*.egg-info/           # Setuptools egg information
.tox/                 # Tox testing directory
.pytest_cache/        # pytest cache directory
.ipynb_checkpoints/   # Jupyter Notebook checkpoints

# --- Module-Specific Data & Model Ignores ---
# Module 1 (Edge AI) Specific Ignores
module1-edge-ai/data/PlantVillage_Raw/         # Raw extracted dataset
module1-edge-ai/data/PlantVillage_Subset/      # Subset created by script
module1-edge-ai/data/*.zip                     # Downloaded zip files
module1-edge-ai/trained_models/                # Ignore all content within trained_models
module1-edge-ai/experiments/                   # Ignore all content within experiments

# Module 2 (Knowledge Graph) Specific Ignores
module2-knowledge-graph/data/raw_texts/         # Raw agricultural texts
module2-knowledge-graph/data/processed/         # Processed knowledge base
module2-knowledge-graph/data/*.zip              # Downloaded zip files
module2-knowledge-graph/data/faiss_indexes/     # FAISS vector indexes
module2-knowledge-graph/data/neo4j_dumps/       # Neo4j database dumps
module2-knowledge-graph/trained_models/         # Ignore all content within trained_models
module2-knowledge-graph/experiments/            # Ignore all content within experiments

# Module 3 (Multimodal Fusion) Specific Ignores
module3-multimodal-fusion/data/weather_data/    # Historical weather datasets
module3-multimodal-fusion/data/soil_data/       # Soil composition datasets
module3-multimodal-fusion/data/fused_datasets/  # Combined multimodal datasets
module3-multimodal-fusion/data/*.zip            # Downloaded zip files
module3-multimodal-fusion/trained_models/       # Ignore all content within trained_models
module3-multimodal-fusion/experiments/          # Ignore all content within experiments

# Module 4 (RL Optimization) Specific Ignores
module4-rl-optimization/data/historical_data/   # 20 years of Sri Lankan agricultural data
module4-rl-optimization/data/market_data/       # Market price historical data
module4-rl-optimization/data/simulation_runs/   # RL simulation outputs
module4-rl-optimization/data/*.zip              # Downloaded zip files
module4-rl-optimization/trained_models/         # Ignore all content within trained_models
module4-rl-optimization/experiments/            # Ignore all content within experiments

# General patterns for all modules
*/checkpoint/         # Model checkpoints
*/runs/               # TensorBoard logs or MLflow runs

# Exception: Small configuration files that SHOULD be committed
!module1-edge-ai/data/class_names.txt          # Class names mapping (small, important)
!module2-knowledge-graph/data/config/          # Small config files
!module3-multimodal-fusion/data/config/        # Small config files  
!module4-rl-optimization/data/config/          # Small config files
!**/requirements.txt                           # Always commit requirements
!**/README.md                                  # Always commit documentation

# Specific model file patterns for all modules
**/*.h5               # Keras/TensorFlow model files
**/*.pb               # TensorFlow SavedModel files
**/*.tflite           # TensorFlow Lite model files
**/*.onnx             # ONNX model files
**/*.pkl              # Pickle files (often used for scikit-learn models)
**/*.joblib           # Joblib files (sklearn model serialization)
**/*.pth              # PyTorch model files
**/*.pt               # PyTorch model files
**/*.bin              # Binary model files (often used by transformers)
**/*.safetensors      # SafeTensors model files
**/*.weights          # Model weight files

# For generated documentation if you use Sphinx/MkDocs within a module:
**/_build/
**/html/

# Additional Python-specific ignores from original file
*.py[codz]
*$py.class
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
.installed.cfg
*.egg
MANIFEST
*.manifest
*.spec
pip-log.txt
pip-delete-this-directory.txt
htmlcov/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
cover/
*.mo
*.pot
local_settings.py
db.sqlite3
db.sqlite3-journal
instance/
.webassets-cache
.scrapy
.pybuilder/
target/
profile_default/
ipython_config.py
.envrc
ENV/
env.bak/
venv.bak/
.spyderproject
.spyproject
.ropeproject
/site
.mypy_cache/
.dmypy.json
dmypy.json
.pyre/
.pytype/
cython_debug/
.abstra/
.ruff_cache/
.pypirc
.cursorignore
.cursorindexingignore
marimo/_static/
marimo/_lsp/
__marimo__/
# Pipenv, UV, Poetry, PDM, Pixi
#Pipfile.lock
#uv.lock
#poetry.lock
#poetry.toml
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/
#pixi.lock
.pixi
__pypackages__/
celerybeat-schedule
celerybeat.pid
*.sage.py

# --- Flutter (for mobile-app/) ---
mobile-app/.flutter-plugins           # Flutter plugin files
mobile-app/.flutter-plugins-dependencies # Flutter plugin dependencies
mobile-app/.dart_tool/                # Dart SDK internal files
mobile-app/.packages                  # Dart package resolution file
mobile-app/.pub/                      # Pub cache
mobile-app/build/                     # Flutter build outputs (APK, IPA, web, etc.)
mobile-app/ios/.symlinks/             # iOS symlinks
mobile-app/ios/Flutter/Generated.xcconfig # Generated Xcode config
mobile-app/ios/Pods/                  # CocoaPods dependencies
mobile-app/ios/.last_build_id         # Last build ID for iOS
mobile-app/android/.gradle/           # Gradle caches
mobile-app/android/app/build/         # Android build outputs
mobile-app/android/.idea/             # Android Studio specific config inside Android folder
mobile-app/android/local.properties   # Android SDK local path
mobile-app/android/**/debug.keystore  # Debug keystore (never commit production keystores!)
mobile-app/android/captures/          # Android Studio captures
mobile-app/lib/generated_plugin_registrant.dart # Generated Flutter plugin registrations
# Firebase specific config for Flutter (if generated)
mobile-app/firebase_app_id_file.json
mobile-app/GoogleService-Info.plist   # iOS Firebase config
mobile-app/google-services.json       # Android Firebase config

# --- Firebase Specific Files (at root, if not already covered) ---
.firebase/                            # Firebase local emulator data (repeated for clarity)
# .firebaserc                          # Often *should* be committed if project aliases are shared, but ignore if developers use different project IDs locally

# Firebase Debug Logs - Comprehensive patterns
firebase-debug.log                    # Firebase CLI debug logs
*firebase-debug.log                   # Firebase debug logs with prefix
firestore-debug.log                   # Firestore emulator debug logs
*firestore-debug.log                  # Firestore debug logs with prefix
ui-debug.log                          # Firebase UI debug logs
*ui-debug.log                         # UI debug logs with prefix
functions-debug.log                   # Functions emulator debug logs
*functions-debug.log                  # Functions debug logs with prefix
database-debug.log                    # Realtime Database debug logs
*database-debug.log                   # Database debug logs with prefix
hosting-debug.log                     # Firebase Hosting debug logs
*hosting-debug.log                    # Hosting debug logs with prefix
storage-debug.log                     # Firebase Storage debug logs
*storage-debug.log                    # Storage debug logs with prefix

# --- Documentation specific ignores ---
documentation/.DS_Store

# Backend compiled output
backend/lib/

# Firebase debug logs (explicit patterns)
firebase-debug.log
firestore-debug.log

# Python virtual environments (explicit patterns)
module1-edge-ai/.venv/
module2-knowledge-graph/.venv/
module3-multimodal-fusion/.venv/
module4-rl-optimization/.venv/
# Alternative venv naming patterns
module1-edge-ai/venv/
module2-knowledge-graph/venv/
module3-multimodal-fusion/venv/
module4-rl-optimization/venv/
env, UV, Poetry, PDM, Pixi
#Pipfile.lock
#uv.lock
#poetry.lock
#poetry.toml
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/
#pixi.lock
.pixi
__pypackages__/
celerybeat-schedule
celerybeat.pid
*.sage.py

# --- Flutter (for mobile-app/) ---
mobile-app/.flutter-plugins           # Flutter plugin files
mobile-app/.flutter-plugins-dependencies # Flutter plugin dependencies
mobile-app/.dart_tool/                # Dart SDK internal files
mobile-app/.packages                  # Dart package resolution file
mobile-app/.pub/                      # Pub cache
mobile-app/build/                     # Flutter build outputs (APK, IPA, web, etc.)
mobile-app/ios/.symlinks/             # iOS symlinks
mobile-app/ios/Flutter/Generated.xcconfig # Generated Xcode config
mobile-app/ios/Pods/                  # CocoaPods dependencies
mobile-app/ios/.last_build_id         # Last build ID for iOS
mobile-app/android/.gradle/           # Gradle caches
mobile-app/android/app/build/         # Android build outputs
mobile-app/android/.idea/             # Android Studio specific config inside Android folder
mobile-app/android/local.properties   # Android SDK local path
mobile-app/android/**/debug.keystore  # Debug keystore (never commit production keystores!)
mobile-app/android/captures/          # Android Studio captures
mobile-app/lib/generated_plugin_registrant.dart # Generated Flutter plugin registrations
# Firebase specific config for Flutter (if generated)
mobile-app/firebase_app_id_file.json
mobile-app/GoogleService-Info.plist   # iOS Firebase config
mobile-app/google-services.json       # Android Firebase config

# --- Firebase Specific Files (at root, if not already covered) ---
.firebase/                            # Firebase local emulator data (repeated for clarity)
# .firebaserc                          # Often *should* be committed if project aliases are shared, but ignore if developers use different project IDs locally

# Firebase Debug Logs - Comprehensive patterns
firebase-debug.log                    # Firebase CLI debug logs
*firebase-debug.log                   # Firebase debug logs with prefix
firestore-debug.log                   # Firestore emulator debug logs
*firestore-debug.log                  # Firestore debug logs with prefix
ui-debug.log                          # Firebase UI debug logs
*ui-debug.log                         # UI debug logs with prefix
functions-debug.log                   # Functions emulator debug logs
*functions-debug.log                  # Functions debug logs with prefix
database-debug.log                    # Realtime Database debug logs
*database-debug.log                   # Database debug logs with prefix
hosting-debug.log                     # Firebase Hosting debug logs
*hosting-debug.log                    # Hosting debug logs with prefix
storage-debug.log                     # Firebase Storage debug logs
*storage-debug.log                    # Storage debug logs with prefix

# --- Documentation specific ignores ---
documentation/.DS_Store

# Backend compiled output
backend/lib/

# Firebase debug logs (explicit patterns)
firebase-debug.log
firestore-debug.log

# Python virtual environments (explicit patterns)
module1-edge-ai/.venv/
module2-knowledge-graph/.venv/
module3-multimodal-fusion/.venv/
module4-rl-optimization/.venv/
# Alternative venv naming patterns
module1-edge-ai/venv/
module2-knowledge-graph/venv/
module3-multimodal-fusion/venv/
module4-rl-optimization/venv/

# Backend temporary models directory
backend/temp_models/
